{
    "validators.dataFormatValidator.invalidUsernameFormatError": "Username can only contain Latin letters (a-z) and numbers (0-9)",
    "validators.dataFormatValidator.minUsernameLengthError": "Username must be at least %d characters long",
    "validators.dataFormatValidator.maxUsernameLengthError": "Username must not exceed %d characters",
    "validators.dataFormatValidator.usernameStartLetterError": "Username must start with a Latin letter",
    "validators.dataFormatValidator.invalidEmailFormatError": "Invalid email address format",
    "validators.dataFormatValidator.invalidPhoneFormatError": "Invalid phone number format",
    "validators.dataFormatValidator.invalidPasswordFormatError": "Password must contain at least one letter and one number",
    "validators.dataFormatValidator.minPasswordLengthError": "Password must be at least %d characters long",
    "validators.dataFormatValidator.maxPasswordLengthError": "Password must not exceed %d characters",
    "authService.validateLoginId.duplicateUsernameError": "Username is already taken",
    "authService.validateLoginId.duplicateEmailError": "Email address is already in use",
    "authService.validateLoginId.duplicatePhoneError": "Phone number is already in use",
    "authService.requireAnyLoginId.identifierRequiredError": "A username, email address or phone number is required",
    "authService.requireAnyLoginId.usernameRequiredError": "Please enter username",
    "authService.requireAnyLoginId.emailRequiredError": "Please enter email",
    "authService.requireAnyLoginId.phoneRequiredError": "Please enter phone",
    "authService.updateUser.userNotFoundError": "User not found",
    "authService.findUserByLoginIds.loginFailedError": "Invalid login or password",
    "authService.verifyPassword.invalidPasswordError": "Invalid login or password",
    "roleGuard.authenticationRequired": "Authentication is required",
    "roleGuard.roleNotAllowed": "You do not have permissions to perform this action",
    "authSession.getUser.authenticationRequired": "Authentication is required",
    "authSession.getAccessTokenId.authenticationRequired": "Authentication is required"
}
